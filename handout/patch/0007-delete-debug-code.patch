From 120118b2b0efe397038d22db2431e955d4093e80 Mon Sep 17 00:00:00 2001
From: Olivier Joris <joris.olivier@hotmail.com>
Date: Wed, 21 Apr 2021 17:20:46 +0200
Subject: [PATCH 7/8] delete debug code

---
 custom/get_processes.c | 8 --------
 custom/get_processes.h | 1 -
 custom/getnbpages.c    | 7 -------
 custom/getreadpages.c  | 3 ---
 4 files changed, 19 deletions(-)

diff --git a/custom/get_processes.c b/custom/get_processes.c
index e528d7b4b..e56798388 100644
--- a/custom/get_processes.c
+++ b/custom/get_processes.c
@@ -99,7 +99,6 @@ struct task_struct_list* find_processes(
         printk(KERN_DEBUG "[find_processes] unable to find root proc");
         return NULL;
     }
-    printk(KERN_DEBUG "[find_processes] able to find root proc");
 
     if(rootProc->mm)
         rootProc->mm->presentReadOnlyPages = NULL;
@@ -110,7 +109,6 @@ struct task_struct_list* find_processes(
         return NULL;
     }
     rootProcName = __get_task_comm(rootProcName, 50, rootProc);
-    printk(KERN_DEBUG "[find_processes] root proc name %s", rootProcName);
 
     // Creates empty list
     list = create_task_list(process_name, name_len);
@@ -131,8 +129,6 @@ struct task_struct_list* find_processes(
         their name = process_name */
     add_children_task_to_list(tmp, rootProc, list);
 
-    printk(KERN_DEBUG "[find_processes] nb processes with given name %u", list->nbProcess);
-
     if(rootProc->mm)
         rootProc->mm->presentReadOnlyPages = (void*) list;
 
@@ -167,9 +163,7 @@ static struct task_struct_list* create_task_list(
     list->nbProcess = 0;
     list->head = NULL;
     list->tail = NULL;
-
     list->nbPages = 0;
-    list->nbPagesPresentReadable = 0;
 
     return list;
 }
@@ -381,8 +375,6 @@ static int parse_pages(
 
                         pListCurrent->next = pList;
                     }
-
-                    ++tList->nbPagesPresentReadable;
                 }
 
                 ++tList->nbPages;
diff --git a/custom/get_processes.h b/custom/get_processes.h
index cf6e7368f..0fe6a0d2c 100644
--- a/custom/get_processes.h
+++ b/custom/get_processes.h
@@ -25,7 +25,6 @@ struct task_struct_list{
     unsigned int nameLen;
     // Number of pages 
     unsigned int nbPages;
-    unsigned int nbPagesPresentReadable;
 };
 
 /*
diff --git a/custom/getnbpages.c b/custom/getnbpages.c
index f38ba5eb5..e484161da 100644
--- a/custom/getnbpages.c
+++ b/custom/getnbpages.c
@@ -21,11 +21,6 @@ SYSCALL_DEFINE2(
     char* processNameLocal;
     unsigned long remainingBytesName;
 
-    printk(KERN_DEBUG "[INFO0940][SYS_CALL][getnbpages] getnbpages sys call");
-
-    printk(KERN_DEBUG "[SYS_CALL][getnbpages] len process name = %u", name_len);
-    printk(KERN_DEBUG "[SYS_CALL][getnbpages] process name = %s", process_name);
-
     // Checks if we can access process name in user space safely
     if(!access_ok(VERIFY_READ, process_name, sizeof(char) * name_len)){
         printk(KERN_DEBUG "[getnbpages] unable to access process name in user space");
@@ -58,8 +53,6 @@ SYSCALL_DEFINE2(
         return -1;
     }
 
-    printk(KERN_DEBUG "[SYS_CALL][getnbpages] nbPagesReadOnlyPresentPages : %u", tlist->nbPagesPresentReadable);
-
     if(processNameLocal)
         kfree(processNameLocal);
 
diff --git a/custom/getreadpages.c b/custom/getreadpages.c
index 16c0cb4b7..bece7f9be 100644
--- a/custom/getreadpages.c
+++ b/custom/getreadpages.c
@@ -21,7 +21,6 @@
 #include <asm/pgtable.h>
 #include <asm/page.h>
 
-
 SYSCALL_DEFINE3(
     getreadpages,
     char __user *, bitmap,
@@ -37,8 +36,6 @@ SYSCALL_DEFINE3(
     int strncmpRtn;
     char *bitmapKernel, *processNameLocal;
 
-    printk(KERN_DEBUG "[INFO0940][SYS_CALL][getreadpages] getreadpages sys call");
-
     /* First, we need to get the process with pid=1 because it stores the
         pointer to the data */
     rootProc = find_task_by_vpid(1);
-- 
2.27.0

