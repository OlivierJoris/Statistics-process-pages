From 4873bb4f5cabe344b582b0964b5fbbfa7c1b3e58 Mon Sep 17 00:00:00 2001
From: Maxime Goffart <maximegoffart@icloud.com>
Date: Sat, 17 Apr 2021 16:54:01 +0200
Subject: [PATCH 1/8] Create basic syscalls

---
 Makefile                               |  2 +-
 arch/x86/entry/syscalls/syscall_32.tbl |  2 ++
 custom/Makefile                        |  1 +
 custom/getnbpages.c                    | 11 +++++++++++
 custom/getreadpages.c                  | 12 ++++++++++++
 include/linux/syscalls.h               |  6 ++++++
 6 files changed, 33 insertions(+), 1 deletion(-)
 create mode 100644 custom/Makefile
 create mode 100644 custom/getnbpages.c
 create mode 100644 custom/getreadpages.c

diff --git a/Makefile b/Makefile
index c8b8e902d..c65faa3d9 100644
--- a/Makefile
+++ b/Makefile
@@ -940,7 +940,7 @@ endif
 
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y		+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ block/
+core-y		+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ block/ custom/
 
 vmlinux-dirs	:= $(patsubst %/,%,$(filter %/, $(init-y) $(init-m) \
 		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \
diff --git a/arch/x86/entry/syscalls/syscall_32.tbl b/arch/x86/entry/syscalls/syscall_32.tbl
index 448ac2161..e57790fe6 100644
--- a/arch/x86/entry/syscalls/syscall_32.tbl
+++ b/arch/x86/entry/syscalls/syscall_32.tbl
@@ -391,3 +391,5 @@
 382	i386	pkey_free		sys_pkey_free
 383	i386	statx			sys_statx
 384	i386	arch_prctl		sys_arch_prctl			compat_sys_arch_prctl
+385 i386    getnbpages      sys_getnbpages
+386 i386    getreadpages    sys_getreadpages
diff --git a/custom/Makefile b/custom/Makefile
new file mode 100644
index 000000000..210d66273
--- /dev/null
+++ b/custom/Makefile
@@ -0,0 +1 @@
+obj-y := getnbpages.o getreadpages.o
\ No newline at end of file
diff --git a/custom/getnbpages.c b/custom/getnbpages.c
new file mode 100644
index 000000000..0ab43b1b4
--- /dev/null
+++ b/custom/getnbpages.c
@@ -0,0 +1,11 @@
+#include <linux/syscalls.h>
+
+SYSCALL_DEFINE2(
+    getnbpages,
+    const char __user *, process_name,
+    const size_t, name_len
+){
+    printk(KERN_DEBUG "[INFO0940][SYS_CALL][getnbpages] getnbpages sys call");
+
+    return 1;
+}
\ No newline at end of file
diff --git a/custom/getreadpages.c b/custom/getreadpages.c
new file mode 100644
index 000000000..4b5c9fd25
--- /dev/null
+++ b/custom/getreadpages.c
@@ -0,0 +1,12 @@
+#include <linux/syscalls.h>
+
+SYSCALL_DEFINE3(
+    getreadpages,
+    char __user *, bitmap,
+    const char __user *, process_name,
+    const size_t, name_len
+){
+    printk(KERN_DEBUG "[INFO0940][SYS_CALL][getreadpages] getreadpages sys call");
+
+    return 0;
+}
\ No newline at end of file
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index a78186d82..e1e046607 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -941,4 +941,10 @@ asmlinkage long sys_pkey_free(int pkey);
 asmlinkage long sys_statx(int dfd, const char __user *path, unsigned flags,
 			  unsigned mask, struct statx __user *buffer);
 
+asmlinkage long sys_getnbpages(const char __user *process_name,
+								const size_t name_len);
+asmlinkage long sys_getreadpages(char __user *bitmap,
+			const char __user *process_name,
+			const size_t name_len);
+
 #endif
-- 
2.27.0

